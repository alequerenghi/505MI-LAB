,cve.id,cve.sourceIdentifier,cve.published,cve.lastModified,cve.vulnStatus,cve.references,cve.cisaExploitAdd,cve.cisaActionDue,cve.cisaRequiredAction,cve.cisaVulnerabilityName,description,vulnerable_cpes,num_references,cwe_list,cvss_version,cvss_vectorString,cvss_baseScore,cvss_baseSeverity,cvss_attackVector,cvss_attackComplexity,cvss_privilegesRequired,cvss_userInteraction,cvss_scope,cvss_confidentialityImpact,cvss_integrityImpact,cvss_availabilityImpact,cve_x,epss_x,percentile_x,cve_y,epss_y,percentile_y,percentile_diff
3730,CVE-2025-59834,security-advisories@github.com,2025-09-25 14:15:46.357,2025-09-26 14:32:53.583,Undergoing Analysis,"[{'url': 'https://github.com/srmorete/adb-mcp/blob/master/src/index.ts#L334-L355', 'source': 'security-advisories@github.com'}, {'url': 'https://github.com/srmorete/adb-mcp/commit/041729c0b25432df3199ff71b3163a307cf4c28c', 'source': 'security-advisories@github.com'}, {'url': 'https://github.com/srmorete/adb-mcp/security/advisories/GHSA-54j7-grvr-9xwg', 'source': 'security-advisories@github.com'}, {'url': 'https://github.com/srmorete/adb-mcp/security/advisories/GHSA-54j7-grvr-9xwg', 'source': '134c704f-9b21-4f2e-91b3-4a467353bcc0'}]",,,,,"ADB MCP Server is a MCP (Model Context Protocol) server for interacting with Android devices through ADB. In versions 0.1.0 and prior, the MCP Server is written in a way that is vulnerable to command injection vulnerability attacks as part of some of its MCP Server tool definition and implementation. This issue has been patched via commit 041729c.",[],4,"['CWE-77', 'CWE-78']",3.1,CVSS:3.1/AV:N/AC:L/PR:N/UI:N/S:U/C:H/I:H/A:H,9.8,CRITICAL,NETWORK,LOW,NONE,NONE,UNCHANGED,HIGH,HIGH,HIGH,CVE-2025-59834,0.00354,0.57039,CVE-2025-59834,0.00251,0.48421,0.00103
3687,CVE-2025-57349,cve@mitre.org,2025-09-24 19:15:40.233,2025-09-29 18:15:33.430,Awaiting Analysis,"[{'url': 'https://github.com/messageformat/messageformat/issues/452', 'source': 'cve@mitre.org'}]",,,,,"The messageformat package, an implementation of the Unicode MessageFormat 2 specification for JavaScript, is vulnerable to prototype pollution due to improper handling of message key paths in versions prior to 2.3.0. The flaw arises when processing nested message keys containing special characters (e.g., __proto__ ), which can lead to unintended modification of the JavaScript Object prototype. This vulnerability may allow a remote attacker to inject properties into the global object prototype via specially crafted message input, potentially causing denial of service or other undefined behaviors in applications using the affected component.",[],1,['CWE-1321'],3.1,CVSS:3.1/AV:N/AC:L/PR:N/UI:N/S:U/C:N/I:N/A:H,7.5,HIGH,NETWORK,LOW,NONE,NONE,UNCHANGED,NONE,NONE,HIGH,CVE-2025-57349,0.00175,0.39412,CVE-2025-57349,0.00074,0.23239,0.00101
3678,CVE-2025-57354,cve@mitre.org,2025-09-24 18:15:41.950,2025-09-26 14:32:53.583,Awaiting Analysis,"[{'url': 'https://github.com/VulnSageAgent/PoCs/tree/main/JavaScript/prototype-pollution/CVE-2025-57354', 'source': 'cve@mitre.org'}, {'url': 'https://github.com/martinandert/counterpart/issues/54', 'source': 'cve@mitre.org'}]",,,,,"A vulnerability exists in the 'counterpart' library for Node.js and the browser due to insufficient sanitization of user-controlled input in translation key processing. The affected versions prior to 0.18.6 allow attackers to manipulate the library's translation functionality by supplying maliciously crafted keys containing prototype chain elements (e.g., __proto__ ), leading to prototype pollution. This weakness enables adversaries to inject arbitrary properties into the JavaScript Object prototype through the first parameter of the translate method when combined with specific separator configurations, potentially resulting in denial-of-service conditions or remote code execution in vulnerable applications. The issue arises from the library's failure to properly validate or neutralize special characters in translation key inputs before processing.",[],2,['CWE-1321'],3.1,CVSS:3.1/AV:N/AC:L/PR:N/UI:N/S:U/C:L/I:N/A:L,6.5,MEDIUM,NETWORK,LOW,NONE,NONE,UNCHANGED,LOW,NONE,LOW,CVE-2025-57354,0.00327,0.55079,CVE-2025-57354,0.00249,0.48114,0.0007799999999999999
924,CVE-2025-8359,security@wordfence.com,2025-09-06 03:15:41.180,2025-09-08 16:25:38.810,Awaiting Analysis,"[{'url': 'https://themeforest.net/item/adforest-classified-wordpress-theme/19481695', 'source': 'security@wordfence.com'}, {'url': 'https://www.wordfence.com/threat-intel/vulnerabilities/id/c080df50-1113-484b-80ed-09515982c585?source=cve', 'source': 'security@wordfence.com'}]",,,,,"The AdForest theme for WordPress is vulnerable to Authentication Bypass in all versions up to, and including, 6.0.9. This is due to the plugin not properly verifying a user's identity prior to authenticating them. This makes it possible for unauthenticated attackers to log in as other users, including administrators, without access to a password.",[],2,['CWE-288'],3.1,CVSS:3.1/AV:N/AC:L/PR:N/UI:N/S:U/C:H/I:H/A:H,9.8,CRITICAL,NETWORK,LOW,NONE,NONE,UNCHANGED,HIGH,HIGH,HIGH,CVE-2025-8359,0.00292,0.52262,CVE-2025-8359,0.00222,0.44855,0.0006999999999999997
930,CVE-2025-7045,security@wordfence.com,2025-09-06 04:16:06.650,2025-09-08 16:25:38.810,Awaiting Analysis,"[{'url': 'https://plugins.trac.wordpress.org/browser/cloud-sso-single-sign-on/tags/1.0.19/assets/CSSO_Init.php', 'source': 'security@wordfence.com'}, {'url': 'https://plugins.trac.wordpress.org/browser/cloud-sso-single-sign-on/tags/1.0.19/assets/base/CSSO_ActionHandler.php', 'source': 'security@wordfence.com'}, {'url': 'https://plugins.trac.wordpress.org/browser/cloud-sso-single-sign-on/tags/1.0.19/saml-sso-plugin.php', 'source': 'security@wordfence.com'}, {'url': 'https://plugins.trac.wordpress.org/browser/cloud-sso-single-sign-on/trunk/assets/base/CSSO_ActionHandler.php?rev=3354459#L130', 'source': 'security@wordfence.com'}, {'url': 'https://wordpress.org/plugins/cloud-sso-single-sign-on/#developers', 'source': 'security@wordfence.com'}, {'url': 'https://www.wordfence.com/threat-intel/vulnerabilities/id/87099513-d8e2-45e5-b7e6-b46558a10d3b?source=cve', 'source': 'security@wordfence.com'}]",,,,,"The Cloud SAML SSO plugin for WordPress is vulnerable to Identity Provider Deletion due to a missing capability check on the delete_config action of the csso_handle_actions() function in all versions up to, and including, 1.0.19. This makes it possible for unauthenticated attackers to delete any configured IdP, breaking the SSO authentication flow and causing a denial-of-service.",[],6,['CWE-306'],3.1,CVSS:3.1/AV:N/AC:L/PR:N/UI:N/S:U/C:N/I:L/A:L,6.5,MEDIUM,NETWORK,LOW,NONE,NONE,UNCHANGED,NONE,LOW,LOW,CVE-2025-7045,0.00251,0.48438,CVE-2025-7045,0.00191,0.4128,0.0006000000000000001
686,CVE-2025-9990,security@wordfence.com,2025-09-05 03:15:32.280,2025-09-05 17:47:10.303,Awaiting Analysis,"[{'url': 'https://plugins.svn.wordpress.org/wp-helpdesk-integration/trunk/index.php', 'source': 'security@wordfence.com'}, {'url': 'https://plugins.trac.wordpress.org/browser/wp-helpdesk-integration/trunk/index.php#L85', 'source': 'security@wordfence.com'}, {'url': 'https://www.wordfence.com/threat-intel/vulnerabilities/id/49a935cc-7b95-4abd-9a4d-c7e14c765863?source=cve', 'source': 'security@wordfence.com'}]",,,,,"The WordPress Helpdesk Integration plugin for WordPress is vulnerable to Local File Inclusion in all versions up to, and including, 5.8.10 via the portal_type parameter. This makes it possible for unauthenticated attackers to include and execute arbitrary .php files on the server, allowing the execution of any PHP code in those files. This can be used to bypass access controls, obtain sensitive data, or achieve code execution in cases where .php file types can be uploaded and included.",[],3,['CWE-98'],3.1,CVSS:3.1/AV:N/AC:H/PR:N/UI:N/S:U/C:H/I:H/A:H,8.1,HIGH,NETWORK,HIGH,NONE,NONE,UNCHANGED,HIGH,HIGH,HIGH,CVE-2025-9990,0.00224,0.45103,CVE-2025-9990,0.0017,0.3881,0.0005399999999999999
3518,CVE-2025-10412,security@wordfence.com,2025-09-23 10:15:34.650,2025-09-24 18:11:24.520,Awaiting Analysis,"[{'url': 'https://builderius.io/cpo/', 'source': 'security@wordfence.com'}, {'url': 'https://www.wordfence.com/threat-intel/vulnerabilities/id/1c0c6a45-2c4a-4a23-84e6-7a9759796824?source=cve', 'source': 'security@wordfence.com'}]",,,,,"The Product Options and Price Calculation Formulas for WooCommerce â€“ Uni CPO (Premium) plugin for WordPress is vulnerable to arbitrary file uploads due to misconfigured file type validation in the 'uni_cpo_upload_file' function in all versions up to, and including, 4.9.54. This makes it possible for unauthenticated attackers to upload arbitrary files on the affected site's server which may make remote code execution possible.",[],2,['CWE-434'],3.1,CVSS:3.1/AV:N/AC:L/PR:N/UI:N/S:U/C:H/I:H/A:H,9.8,CRITICAL,NETWORK,LOW,NONE,NONE,UNCHANGED,HIGH,HIGH,HIGH,CVE-2025-10412,0.00197,0.41991,CVE-2025-10412,0.0015,0.36239,0.00046999999999999993
3515,CVE-2025-10147,security@wordfence.com,2025-09-23 09:15:30.920,2025-09-24 18:11:24.520,Awaiting Analysis,"[{'url': 'https://plugins.trac.wordpress.org/browser/podlove-podcasting-plugin-for-wordpress/tags/4.2.6/lib/model/image.php#L465', 'source': 'security@wordfence.com'}, {'url': 'https://plugins.trac.wordpress.org/changeset/3364994/', 'source': 'security@wordfence.com'}, {'url': 'https://www.wordfence.com/threat-intel/vulnerabilities/id/093058f1-c717-424f-9bd5-4838df8d20a1?source=cve', 'source': 'security@wordfence.com'}]",,,,,"The Podlove Podcast Publisher plugin for WordPress is vulnerable to arbitrary file uploads due to missing file type validation in the 'move_as_original_file' function in all versions up to, and including, 4.2.6. This makes it possible for unauthenticated attackers to upload arbitrary files on the affected site's server which may make remote code execution possible.",[],3,['CWE-434'],3.1,CVSS:3.1/AV:N/AC:L/PR:N/UI:N/S:U/C:H/I:H/A:H,9.8,CRITICAL,NETWORK,LOW,NONE,NONE,UNCHANGED,HIGH,HIGH,HIGH,CVE-2025-10147,0.00169,0.38596,CVE-2025-10147,0.00128,0.33128,0.00041
401,CVE-2025-8268,security@wordfence.com,2025-09-03 21:15:33.357,2025-09-04 15:35:29.497,Awaiting Analysis,"[{'url': 'https://plugins.trac.wordpress.org/browser/ai-engine/tags/2.9.5/classes/modules/files.php#L518', 'source': 'security@wordfence.com'}, {'url': 'https://plugins.trac.wordpress.org/browser/ai-engine/tags/2.9.5/classes/modules/files.php#L645', 'source': 'security@wordfence.com'}, {'url': 'https://plugins.trac.wordpress.org/browser/ai-engine/tags/2.9.5/classes/modules/files.php#L664', 'source': 'security@wordfence.com'}, {'url': 'https://www.wordfence.com/threat-intel/vulnerabilities/id/be39e24f-d7d7-44db-9ffd-a4605de8e577?source=cve', 'source': 'security@wordfence.com'}]",,,,,"The AI Engine plugin for WordPress is vulnerable to unauthorized access and loss of data due to a missing capability check on the rest_list and delete_files functions in all versions up to, and including, 2.9.5. This makes it possible for unauthenticated attackers to list and delete files uploaded by other users.",[],4,['CWE-862'],3.1,CVSS:3.1/AV:N/AC:L/PR:N/UI:N/S:U/C:L/I:L/A:N,6.5,MEDIUM,NETWORK,LOW,NONE,NONE,UNCHANGED,LOW,LOW,NONE,CVE-2025-8268,0.0011,0.30113,CVE-2025-8268,0.00076,0.23691,0.00034
1382,CVE-2025-58760,security-advisories@github.com,2025-09-09 20:15:49.563,2025-09-18 17:30:18.970,Analyzed,"[{'url': 'https://github.com/Tautulli/Tautulli/commit/47566128e2e5dde98980d59b7a51b98173bc0b40', 'source': 'security-advisories@github.com', 'tags': ['Patch']}, {'url': 'https://github.com/Tautulli/Tautulli/security/advisories/GHSA-8g4r-8f3f-hghp', 'source': 'security-advisories@github.com', 'tags': ['Exploit', 'Vendor Advisory']}]",,,,,"Tautulli is a Python based monitoring and tracking tool for Plex Media Server. The `/image` API endpoint in Tautulli v2.15.3 and earlier is vulnerable to path traversal, allowing unauthenticated attackers to read arbitrary files from the application server's filesystem. In Tautulli, the `/image` API endpoint is used to serve static images from the application's data directory to users. This endpoint can be accessed without authentication, and its intended purpose is for server background images and icons within the user interface. Attackers can exfiltrate files from the application file system, including the `tautulli.db` SQLite database containing active JWT tokens, as well as the `config.ini` file which contains the hashed admin password, the JWT token secret, and the Plex Media Server token and connection details. If the password is cracked, or if a valid JWT token is present in the database, an unauthenticated attacker can escalate their privileges to obtain administrative control over the application. Version 2.16.0 contains a fix for the issue.",['cpe:2.3:a:tautulli:tautulli:*:*:*:*:*:*:*:*'],2,['CWE-23'],3.1,CVSS:3.1/AV:N/AC:L/PR:N/UI:N/S:U/C:H/I:N/A:N,7.5,HIGH,NETWORK,LOW,NONE,NONE,UNCHANGED,HIGH,NONE,NONE,CVE-2025-58760,0.00119,0.31499,CVE-2025-58760,0.0009,0.26616,0.0002900000000000001
